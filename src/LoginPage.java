/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MY PC
 */
//package com.javacodegeeks.java.core;
//package ;

 
import java.io.FileNotFoundException;
import java.io.Reader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
public class LoginPage extends javax.swing.JFrame  {
     
            //JSONObject jsonObject = (JSONObject) jsonParser.parse(fileReader);
 
            //String siteName = (String) jsonObject.get("Username");
 
            //System.out.println("Site Name: " + siteName);
 
            //long members = (long) jsonObject.get("Members");
 
            //System.out.println("Members: " + members);
 
            //String url = (String) jsonObject.get("Password");
 
            //System.out.println("URL: " + url);
 
            //JSONArray names = (JSONArray) jsonObject.get("Names");
 
            //Iterator i = .iterator();
 
            //while (i.hasNext()) {
 
                //System.out.println(" "+i.next());
 
            //}
 
        /*} catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }*/
 
    
 

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();

        jDialog1.setMinimumSize(new java.awt.Dimension(400, 200));

        jLabel3.setText("Ride In Progress!");

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jButton3)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        jDialog2.setMinimumSize(new java.awt.Dimension(400, 400));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Wrong Username or Password");

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jButton2.setText("New User?");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField1)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new NewUser().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String JsonFilePath = "E:\\Projects\\Swing\\CabBooking\\user.json";
            JSONParser jsonParser = new JSONParser();
 
  try{
      int z = 1;
            Reader id = new FileReader("uid.json");
            //JSONParser uidParser = new JSONParser();
            JSONObject uidO = (JSONObject) jsonParser.parse(id);
            Reader filereader = new FileReader("user.json");
            id.close();
            //JSONObject jsonObject = (JSONObject) jsonParser.parse(filereader);
            JSONArray a = (JSONArray) jsonParser.parse(filereader);
            filereader.close();
            JSONArray a1 = new JSONArray();
            
            for(Object o : a)
                {
                    JSONObject person = (JSONObject) o;
                
            String Username = (String) person.get("Username");
            String Password = (String) person.get("Password");
            String tempFahr = (jTextField1.getText());
            String tempFahr1 = (jPasswordField1.getText());
            String s = "N";
            if(tempFahr.equals(Username) && tempFahr1.equals(Password) && s.equals((String)person.get("status")))
            {
                realloc realloc1 = new realloc();
                FileWriter idw = new FileWriter("uid.json", false);
                uidO.put("active", Username);
                uidO.put("aid",(String)person.get("UserID"));
                idw.write(uidO.toJSONString());
                idw.close();
                //person.put("status","Y");
                a1.add(person);
                this.dispose();
                new BookScreen().setVisible(true);
                z = 0;
            }
            else if(tempFahr.equals(Username) && tempFahr1.equals(Password) && !s.equals((String)person.get("status")))
                    {
                        jDialog1.setVisible(true);
                        z=2;
                        //new DriverDetails().setVisible(true);
                        break;
                    }
            if(!tempFahr.equals(Username) && !tempFahr1.equals(Password))
            a1.add(person);
                }
            if(z==1)
            {
                jDialog2.setVisible(true);
            }
            if(z==0)
            {FileWriter idw = new FileWriter("user.json", false);
            idw.write(a1.toJSONString());
            idw.close();}
            } catch (FileNotFoundException e) {
            System.out.println("YES1");
        } catch (IOException e) {
            System.out.println("YES2");}
         catch (ParseException e ) {
            System.out.println("YES3");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    jDialog1.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
jDialog2.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
class realloc {
    realloc()
    {
        int tn = 10;
                    while(tn!=0)
            {
                tn--;
            try
        {
            
            JSONParser jsonParser = new JSONParser();
            Reader id = new FileReader("location.json");
            JSONArray a = (JSONArray) jsonParser.parse(id);
            JSONArray a2 = (JSONArray) a;
            JSONArray a1 = new JSONArray();
            
            Reader filereader = new FileReader("drivers.json");
            JSONArray d = (JSONArray) jsonParser.parse(filereader);
            JSONArray d1 = new JSONArray();
            id.close();
            filereader.close();
            
            
            //while(tn!=0)
            //{
                //tn--;
                
            for(Object o : a)
            {
                JSONObject loc = (JSONObject) o;
                if(Integer.parseInt((String)loc.get("drivs")) == 0)
                {
                    
                    int n = 0;
                    for(Object o1 : a)
            {
                
                JSONObject loc1 = (JSONObject) o1;
                String com = (String)loc.get("lname");
                if(Integer.parseInt((String)loc1.get("drivs")) > 1 && n==0)
                {
                    
                    
                    for(Object q : d)
                    {
                        JSONObject dr  = (JSONObject) q;
                        String st = (String) dr.get("rider");
                        String st1 = (String) dr.get("location");
                        if(st1.equals((String)loc1.get("lname")) && st.equals("none") && n==0)
                        {
                            dr.put("location",(String)loc.get("lname"));
                            int t = Integer.parseInt((String)loc.get("drivs"));
                            t++;
                            loc.put("drivs",Integer.toString(t));
                            t = Integer.parseInt((String)loc1.get("drivs"));
                            t--;
                            loc1.put("drivs",Integer.toString(t));
                            d1.add(dr);
                            n++;
                                    
                        }
                        else
                            d1.add(dr);
                    }
                    a1.add(loc);
                    a1.add(loc1);
                }
                else if(!com.equals((String)loc1.get("lname")))
                {
                    a1.add(loc1);
                }
            }
                    if(n!=0)
                    {
                        FileWriter idw = new FileWriter("location.json", false);
            idw.write(a1.toJSONString());
            idw.close();
            idw = new FileWriter("drivers.json", false);
            idw.write(d1.toJSONString());
            idw.close();
            //a = new JSONArray();
            //a2 = new JSONArray();
            //d = new JSONArray();
            //a = (JSONArray) a1;
            //a2 = (JSONArray)a;
            //d = (JSONArray)d1;
            //a1 = new JSONArray();
            //d1 = new JSONArray();
            break;
                    }
                    //if n==1 write and break 
                }
            }
            
        
        }catch (FileNotFoundException e) {
            System.out.println("YES1");
        } catch (IOException e) {
            System.out.println(e);}
         catch (ParseException e ) {
            System.out.println(e);
        }
}
}
}
